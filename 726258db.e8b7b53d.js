(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{159:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(10),o=(n(0),n(173)),i={id:"installation",title:"Installing Pyre",sidebar_label:"Installation"},c={id:"installation",title:"Installing Pyre",description:"You can install Pyre via pip or build it yourself from the source.",source:"@site/../docs/installation.md",permalink:"/docs/installation",sidebar_label:"Installation",sidebar:"overview",previous:{title:"Overview",permalink:"/docs/overview"},next:{title:"Guided Tour",permalink:"/docs/guided-tour"}},l=[{value:"Pypi Package (recommended)",id:"pypi-package-recommended",children:[]},{value:"Building from Source",id:"building-from-source",children:[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Getting the Source",id:"getting-the-source",children:[]},{value:"Windows Subsystem for Linux (WSL) Install",id:"windows-subsystem-for-linux-wsl-install",children:[]}]}],u={rightToc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You can install Pyre via ",Object(o.b)("inlineCode",{parentName:"p"},"pip")," or build it yourself from the source."),Object(o.b)("h2",{id:"pypi-package-recommended"},"Pypi Package (recommended)"),Object(o.b)("p",null,"You will need to have a working ",Object(o.b)("em",{parentName:"p"},"Python (version 3.5 or later)")," on your machine. Running"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ pip install pyre-check\n")),Object(o.b)("p",null,"should take care of installing Pyre on your system. See our ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/guided-tour"}),"Guided Tour")," for how\nto use Pyre."),Object(o.b)("p",null,"Note that"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"on ",Object(o.b)("em",{parentName:"li"},"MacOS")," you might have to invoke ",Object(o.b)("inlineCode",{parentName:"li"},"pip36")," explicitly to use a current version,"),Object(o.b)("li",{parentName:"ul"},"we currently only provide ",Object(o.b)("em",{parentName:"li"},"linux/AMD64")," and ",Object(o.b)("em",{parentName:"li"},"OSX/AMD64")," binaries. If you need support for a\ndifferent architecture, feel free to reach out to us via a GitHub Issue."),Object(o.b)("li",{parentName:"ul"},"Please see below for a unsupported workaround to get ",Object(o.b)("inlineCode",{parentName:"li"},"pyre")," working on Windows via\n",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux"}),"WSL"))),Object(o.b)("h2",{id:"building-from-source"},"Building from Source"),Object(o.b)("p",null,"These instructions are known to work on Mac OS X (tested on High\nSierra - OSX 10.13 - even though binaries are compatible with versions\nas old as 10.11) and Linux (tested on Ubuntu 16.04 LTS and CentOS 7)."),Object(o.b)("h3",{id:"prerequisites"},"Prerequisites"),Object(o.b)("h4",{id:"opam"},"Opam"),Object(o.b)("p",null,"Before we can build Pyre, we need to make sure that we have a current OCaml compiler. We use\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://opam.ocaml.org/"}),"Opam")," to manage our compiler and libraries. You can get Opam via various\npackage management systems. Please follow their instructions for your particular operating system."),Object(o.b)("p",null,"Once you have Opam on your system, switch to a current compiler with"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ opam switch 4.08.0\n")),Object(o.b)("p",null,"This will compile the compiler from scratch and is likely going to take some time on your system."),Object(o.b)("h4",{id:"typeshed"},"Typeshed"),Object(o.b)("p",null,"Although not strictly required, we recommend that you get a version of typeshed to test your local\nchanges with. These stubs provide definitions for most of the standard library functions.\nYou can get a current version from GitHub with"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ git clone https://github.com/python/typeshed.git\n")),Object(o.b)("p",null,"You can pass the location of typeshed to Pyre (once you have it set up) with a ",Object(o.b)("inlineCode",{parentName:"p"},"--typeshed"),"\nparameter."),Object(o.b)("h3",{id:"getting-the-source"},"Getting the Source"),Object(o.b)("p",null,"With a working OCaml, you can clone the source from GitHub with"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ git clone https://github.com/facebook/pyre-check\n")),Object(o.b)("p",null,"You can complete the setup of your development environment with"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ cd pyre-check\n$ ./scripts/setup.sh --local\n")),Object(o.b)("p",null,"This will generate a ",Object(o.b)("inlineCode",{parentName:"p"},"Makefile")," in your checkout directory. You can subsequently build and test\nPyre with"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ make\n$ make test\n$ make python_tests\n")),Object(o.b)("h3",{id:"windows-subsystem-for-linux-wsl-install"},"Windows Subsystem for Linux (WSL) Install"),Object(o.b)("p",null,"On ",Object(o.b)("em",{parentName:"p"},"x86_64")," Windows ",Object(o.b)("inlineCode",{parentName:"p"},"pyre")," can run via Linux using ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux"}),"WSL"),".\nA brief summary to get this running on Ubuntu please follow:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.microsoft.com/en-us/windows/wsl/install-win10"}),"Install WSL")," ",Object(o.b)("em",{parentName:"li"},"(external Microsoft Documentation)")),Object(o.b)("li",{parentName:"ul"},"Once you have a login to your Linux of choice:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Optionally: Install build environment (some dependencies of ",Object(o.b)("inlineCode",{parentName:"li"},"pyre")," might need to be built)"),Object(o.b)("li",{parentName:"ul"},"Use ",Object(o.b)("inlineCode",{parentName:"li"},"pip")," as described above or via a ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.python.org/3/tutorial/venv.html"}),"Python Virtual Environment")))),Object(o.b)("li",{parentName:"ul"},"Here is an example using ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.ubuntu.com/"}),"Ubuntu")," with a ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://docs.python.org/3/tutorial/venv.html"}),"venv"),":")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt install python3-venv build-essential python3-dev libpython3-dev\npython3 -m venv /tmp/tp\n/tmp/tp/bin/pip install --update pip setuptools wheel\n/tmp/tp/bin/pip install pyre-check\nsource /tmp/tp/bin/activate\ncd /mnt/c/path/to/repo\npyre --source-directory . check\n\n(tp) cooper@TESTFAC-1FMHLI2:/mnt/c/path/to/repo$ pyre --source-directory . check\n \u019b Setting up a `.pyre_configuration` with `pyre init` may reduce overhead.\n \u019b No type errors found\n")))}p.isMDXComponent=!0},173:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),p=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),m=r,d=s["".concat(i,".").concat(m)]||s[m]||b[m]||o;return n?a.a.createElement(d,c(c({ref:t},u),{},{components:n})):a.a.createElement(d,c({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);